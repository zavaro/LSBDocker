version: '3.8'

networks:
  lsb:
    external: false
  web:
    external: true

services:
  # The DB service
  db:
    image: mariadb
    container_name: ximariadb
    restart: always
    env_file:
      - .env.example
      - .env
    networks:
      lsb:
        aliases:
            - db
      
    # Run all the .sql files in the /sql directory to initalize the DB. This only hapens the first time this service is started and will not handle additions/modifications
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
      - ~/lsb_server/data:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"

  # Ease of access tool for the DB, you can type in localhost:8080 to get a web interface to the DB. You can log in with root:wheel
  db_admin_portal:
    image: adminer
    container_name: xiadminer
    restart: always
    env_file:
      - .env.example
      - .env
    depends_on:
      - db
    networks:
      - lsb
    ports:
      - 8080:8080
      
  traefik:
    image: traefik
    restart: unless-stopped
    container_name: xitraefik
    env_file:
      - .env.example
      - .env
    environment:
      TRAEFIK_API_DASHBOARD: false
      TRAEFIK_API_INSECURE: true

      TRAEFIK_ENTRYPOINTS_GAME: true
      TRAEFIK_ENTRYPOINTS_GAME_ADDRESS: ":54230/udp"
      TRAEFIK_ENTRYPOINTS_CONNECT: true
      TRAEFIK_ENTRYPOINTS_CONNECT_ADDRESS: ":54230/tcp"
      TRAEFIK_ENTRYPOINTS_CONNECT1: true
      TRAEFIK_ENTRYPOINTS_CONNECT1_ADDRESS: ":54231/tcp"
      TRAEFIK_ENTRYPOINTS_CONNECT2: true
      TRAEFIK_ENTRYPOINTS_CONNECT2_ADDRESS: ":54001/tcp"
      TRAEFIK_ENTRYPOINTS_SEARCH: true
      TRAEFIK_ENTRYPOINTS_SEARCH_ADDRESS: ":54002/tcp"

      TRAEFIK_PROVIDERS_DOCKER: true
      TRAEFIK_PROVIDERS_DOCKER_WATCH: true
      TRAEFIK_PROVIDERS_DOCKER_NETWORK: "web"
      TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT: false

    ports:
      - "${CONNECT1_PORT}:54231/tcp"
      - "${CONNECT_PORT}:54230/tcp"
      - "${GAME_PORT}:54230/udp"
      - "${CONNECT2_PORT}:54001/tcp"
      - "${SEARCH_PORT}:54002/tcp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - web
      - lsb

  # The server service
  game:
    # Build whatever is in the Dockerfile in the server root folder
    build: .
    container_name: xiserver
    env_file:
      - .env.example
      - .env
    environment:
      XI_NETWORK_SQL_HOST: "${MYSQL_HOST}"
      XI_NETWORK_SQL_PORT: "${MYSQL_PORT}"
      XI_NETWORK_SQL_LOGIN: "${MYSQL_USER}"
      XI_NETWORK_SQL_PASSWORD: "${MYSQL_PASSWORD}"
      XI_NETWORK_SQL_DATABASE: "${MYSQL_DATABASE}"
      XI_NETWORK_LOGIN_DATA_IP: 0.0.0.0
      XI_NETWORK_LOGIN_DATA_PORT: "${GAME_PORT}"
      XI_NETWORK_LOGIN_VIEW_IP: 0.0.0.0
      XI_NETWORK_LOGIN_VIEW_PORT: "${CONNECT2_PORT}"
      XI_NETWORK_LOGIN_AUTH_IP: 0.0.0.0
      XI_NETWORK_LOGIN_AUTH_PORT: "${CONNECT1_PORT}"
      XI_NETWORK_ZMQ_IP: 0.0.0.0
      XI_NETWORK_ZMQ_PORT: "${MANTIS_PORT}"
      # Update this to your host's IP address in the .env file
      XI_NETWORK_ZONE_IP: "${IP_ADDRESS}"
      XI_NETWORK_MAP_PORT: "${CONNECT_PORT}"
      XI_NETWORK_SEARCH_PORT: "${SEARCH_PORT}"
    depends_on:
      - db
      - traefik
    networks:
      - lsb
    labels:
      - "traefik.enable=true"
      
      - "traefik.udp.routers.game.service=svc_game"
      - "traefik.udp.services.svc_game.loadbalancer.server.port=${GAME_PORT}"

      - "traefik.tcp.routers.connect.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.connect.entrypoints=connect"
      - "traefik.tcp.routers.connect.service=svc_connect"
      - "traefik.tcp.services.svc_connect.loadbalancer.server.port=${CONNECT_PORT}"

      - "traefik.tcp.routers.connect1.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.connect1.entrypoints=connect1"
      - "traefik.tcp.routers.connect1.service=svc_connect1"
      - "traefik.tcp.services.svc_connect1.loadbalancer.server.port=${CONNECT1_PORT}"

      - "traefik.tcp.routers.connect2.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.connect2.entrypoints=connect2"
      - "traefik.tcp.routers.connect2.service=svc_connect2"
      - "traefik.tcp.services.svc_connect2.loadbalancer.server.port=${CONNECT2_PORT}"

      - "traefik.tcp.routers.search.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.search.entrypoints=search"
      - "traefik.tcp.routers.search.service=svc_search"
      - "traefik.tcp.services.svc_search.loadbalancer.server.port=${SEARCH_PORT}"